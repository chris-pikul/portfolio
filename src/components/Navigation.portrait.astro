---
/**
 * Chris Pikul's Portfolio, designed and coded by Chris Pikul.
 * Copyright 2022 Chris Pikul. All Rights Reserved.
 * 
 * Provides the master navigation for the whole site, to be displayed
 * at the top of any page.
 * 
 * This version is for portrait (mobile)
 */
---
<nav id='master-nav-portrait' class='portrait intro-second'>
  <ul class='nav-links'>
    <li class='nav-link'><a href='/'>About</a></li>
    <li class='nav-link'><a href='/projects'>Projects</a></li>
    <li class='nav-link'><a href='/articles'>Articles</a></li>
  </ul>
  <div class='nav-dividers'>
    <div class='separator separator-round' />
    <div id='nav-portrait-active' class='separator' />
  </div>
</nav>

<script>
  function hookPortrait() {
    console.info('Hooking up master navigation bar for portrait mode');

    const masterNav = document.getElementById('master-nav-portrait');
    if(!masterNav)
      return console.error(`No master navigation element present`);

    const activeSlider = document.getElementById('nav-portrait-active');
    if(!activeSlider)
      return console.error(`No navigation active slider available`);
    activeSlider.style.display = 'block';

    let activeLink:HTMLAnchorElement;

    const moveTo = (target?:HTMLElement) => {
      if(target) {
        console.info('Moving active slider to link target', target);
        const rect = target.getBoundingClientRect();
        
        activeSlider.style.opacity = '1';
        activeSlider.style.left = `${rect.left}px`;
        activeSlider.style.width = `${rect.width}px`;
      } else if(activeLink) {
        // Return to active
        moveTo(activeLink);
      } else {
        // No active link
        activeSlider.style.opacity = '0';
      }
    };

    const makeActive = (link:HTMLAnchorElement) => {
      if(activeLink)
        activeLink.classList.remove('active');
      
      link.classList.add('active');
      activeLink = link;
      moveTo(link);
    };

    const hoverStart = (evt:MouseEvent) => {
      moveTo(evt.target as HTMLElement);
    };
    const hoverEnd = () => moveTo();

    // Find the current page's active link
    const curPath = document.location.origin + document.location.pathname;
    console.info(`Current path = ${curPath}`);

    masterNav.querySelectorAll('a').forEach(link => {
      link.className = '';

      console.info(`Checking link path ${link.href}`);
      if(link.href === curPath) {
        console.info('Found active link');
        makeActive(link);
      }

      // Bind events for links
      link.addEventListener('mouseenter', hoverStart);
      link.addEventListener('mouseleave', hoverEnd);
      link.addEventListener('click', hoverStart);
    });

    // Make doc resize refresh the active link slider
    window.addEventListener('resize', () => moveTo(activeLink));
  }

  // Pseudo-document-ready event
  (() => hookPortrait())();
</script>

<style lang="scss" is:global>
  @use '../styles/_base' as *;
  @use '../styles/_colors' as *;

  #master-nav-portrait {
    position: sticky;

    padding: 1em 0.5em;

    /* Background so we can clip stuff under it */
    background: var(--bg-start);
    background: linear-gradient(175deg, var(--bg-start) 5%, var(--bg-end) 95%);
    background-attachment: fixed;

    color: $shade-300;
    color: var(--shade-300);

    /* Gradient to transition stuff */
    &::after {
      content: '';
      display: block;
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      height: 2rem;

      background: var(--bg-start);
      background: linear-gradient(175deg, var(--bg-start) 5%, var(--bg-end) 95%);
      background-attachment: fixed;

      -webkit-mask-image: linear-gradient(black, transparent);
      mask-image: linear-gradient(black, transparent);
    }

    .nav-links {
      display: flex;
      flex-flow: row nowrap;
      justify-content: space-between;
      align-items: flex-end;

      margin-bottom: 0.25rem;
      padding: 0 1rem;

      // The wrapper holding the link
      .nav-link { }

      a, a:visited {
        box-sizing: content-box;
        padding: 0 0.5em;
        @include font-common();
        text-align: center;

        &:first-child { text-align: left; }
        &:last-child { text-align: right; }

        &:hover {
          color: $shade-400;
          color: var(--shade-400);
        }

        &:active {
          color: $shade-500;
          color: var(--shade-500);
        }

        &.active {
          color: $shade-600;
          color: var(--shade-600);
        }
      }
    }

    .nav-dividers {
      position: relative;

      .separator {
        position: absolute;
        top: 0;
        left: 0;
      }

      #nav-portrait-active {
        display: none;

        left: 0.5em;
        width: 1em;
        height: 2px;

        color: $shade-400;
        color: var(--shade-400);
        opacity: 0;

        transform: translateX(-0.5em);
        transition: left ease-in 0.3s, width ease-out 0.3s, opacity ease 1s;

        &::before, &::after {
          top: -2px;
          width: 6px;
          height: 6px;
        }
      }
    }
  }
</style>